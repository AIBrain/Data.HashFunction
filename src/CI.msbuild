<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build;Test;Package" TreatAsLocalProperty="InterfacesVersion" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Properties -->
  <PropertyGroup>
    <SolutionDir Condition=" '$(SolutionDir)' == '' ">.</SolutionDir>
    <ToolsDir Condition=" '$(ToolsDir)' == '' ">..\tools</ToolsDir>
    <NuGetDir Condition=" '$(NuGetDir)' == '' ">..\NuGet</NuGetDir>
    <TestBinDir Condition =" '$(TestBinDir)' == '' ">..\test\bin</TestBinDir>

    <NuGetExecutable Condition=" '$(NuGetExecutable)' == '' ">$(ToolsDir)\nuget.exe</NuGetExecutable>
    <MSBuildCommunityTasksPath Condition=" '$(MSBuildCommunityTasksPath)' == '' ">$(ToolsDir)</MSBuildCommunityTasksPath>

    <InterfacesVersion Condition=" '$(InterfacesVersion)' == '' ">$([System.Text.RegularExpressions.Regex]::Replace('$(BuildVersion)', '^([0-9]+)(\.[0-9]+)*$', '$1.0.0.0'))</InterfacesVersion>
    <InterfacesVersion Condition=" '$(InterfacesVersion)' == '' ">1.0.0.0</InterfacesVersion>
    <ExtraDefines Condition="'$(BuildVersion)' != ''">CUSTOM_VERSIONING;</ExtraDefines>

    <xUnitConsoleVersion>2.0.0</xUnitConsoleVersion>
    <xUnitConsoleExecutable>$(SolutionDir)\packages\xunit.runner.console.$(xUnitConsoleVersion)\tools\xunit.console.exe</xUnitConsoleExecutable>
    <xUnitResultsXml>$(SolutionDir)\xunit-results.xml</xUnitResultsXml>
  </PropertyGroup>

  
  
  <!-- Items -->
  <ItemGroup>
    <ProjectToBuild Include="$(SolutionDir)\**\*.csproj" Exclude="$(SolutionDir)\Test\*.csproj;$(SolutionDir)\**\*.Net40Async.csproj">
      <ProjectName>$([System.String]::Copy('%(Filename)').Replace('Data.HashFunction.', ''))</ProjectName>
      <Async40Project>%(RootDir)%(Directory)%(Filename).Net40Async%(Extension)</Async40Project>
    </ProjectToBuild>

    <TestProjectToBuild Include="$(SolutionDir)\Test\*.csproj">
      <ProjectName>$([System.String]::Copy('%(Filename)').Replace('Data.HashFunction.', ''))</ProjectName>
    </TestProjectToBuild>

    
    <AssemblyInfoFiles Include="$(SolutionDir)\**\AssemblyInfo.cs" Exclude="$(SolutionDir)\Interfaces\Properties\AssemblyInfo.cs" />
    <InterfaceAssemblyInfoFile Include="$(SolutionDir)\Interfaces\Properties\AssemblyInfo.cs" />

    
    <NuSpecFile Include="$(NuGetDir)/**/*.nuspec">
      <AssemblyName>$([System.String]::Copy('%(Filename)').Replace('.Net40Async', ''))</AssemblyName>
      <AssemblyPath Condition="$([System.String]::Copy('%(Filename)').EndsWith('.Net40Async'))">%(RelativeDir)lib\net40\System.%(AssemblyName).dll</AssemblyPath>
      <AssemblyPath Condition="'%(AssemblyPath)' == ''">%(RelativeDir)lib\net45\System.%(AssemblyName).dll</AssemblyPath>
    </NuSpecFile>
  </ItemGroup>

  
  
  <!-- Imports -->
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

  
  
  <!-- Restore Packages -->
  <Target Name="RestorePackages">
    <Exec Command="$(NuGetExecutable) restore $(SolutionDir)" />
  </Target>

  
  <!-- Patch AssemblyInfo  -->
  <Target Name="PatchAssemblyFiles">
    <FileUpdate Condition=" '$(BuildVersion)' != '' "
                Files="@(AssemblyInfoFiles)"
                Regex="AssemblyVersion\(&quot;.*&quot;\)"
                ReplacementText="AssemblyVersion(&quot;$(BuildVersion)&quot;)" />

    <FileUpdate Condition=" '$(InterfacesVersion)' != '' "
                Files="@(InterfaceAssemblyInfoFile)"
                Regex="AssemblyVersion\(&quot;.*&quot;\)"
                ReplacementText="AssemblyVersion(&quot;$(InterfacesVersion)&quot;)" />
  </Target>


  <!-- BclAsync_Projects -->
  <Target Name="BclAsync_Projects" Inputs="$(ToolsDir)\BclAsync.csproj.xslt" Outputs="%(ProjectToBuild.Async40Project)">
    <XslTransformation 
      XslInputPath="$(ToolsDir)\BclAsync.csproj.xslt" 
      XmlInputPaths="%(ProjectToBuild.Identity)" 
      OutputPaths="%(ProjectToBuild.Async40Project)" />
  </Target>
  
  
  <!-- Build -->
  <PropertyGroup>
    <BuildDependsOn>
      RestorePackages;
      PatchAssemblyFiles;
      Build_Configure;
    </BuildDependsOn>

    <Build_ConfigureDependsOn>
      BclAsync_Projects;
    </Build_ConfigureDependsOn>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)">
    <MSBuild Targets="Build"
             Projects="%(ProjectBuildConfiguration.Project)"
             Properties="%(ProjectBuildConfiguration.Properties)"
             BuildInParallel="true" />
  </Target>

  <Target Name="Build_Configure" Outputs="%(ProjectToBuild.Identity)" DependsOnTargets="$(Build_ConfigureDependsOn)">
    <ItemGroup>
      <ProjectBuildConfiguration Include="Net40::%(ProjectToBuild.Identity)">
        <Project>%(ProjectToBuild.Identity)</Project>
        <Properties>
          Configuration=Debug;
          TargetFrameworkVersion=v4.0;

          OutputPath=bin\Debug\net40;
          IntermediateOutputPath=obj\Debug\net40\;
          DebugType=full;
          DefineConstants=DEBUG;TRACE;CODE_ANALYSIS;NET40;$(ExtraDefines)

          CodeAnalysisTreatWarningsAsErrors=true;
          RunCodeAnalysis=true;
        </Properties>
      </ProjectBuildConfiguration>

      <ProjectBuildConfiguration Include="Net40_WithAsync::%(ProjectToBuild.Identity)">
        <Project>%(ProjectToBuild.Async40Project)</Project>
        <Properties>
          Configuration=Debug;
          TargetFrameworkVersion=v4.0;
          AppConfig=..\$(ToolsDir)\BclAsync.app.config;

          OutputPath=bin\Debug\net40Async;
          IntermediateOutputPath=obj\Debug\net40Async\;
          DebugType=full;
          DefineConstants=DEBUG;TRACE;CODE_ANALYSIS;NET40;INCLUDE_ASYNC;$(ExtraDefines)

          CodeAnalysisTreatWarningsAsErrors=true;
          RunCodeAnalysis=true;
        </Properties>
      </ProjectBuildConfiguration>

      <ProjectBuildConfiguration Include="Net45::%(ProjectToBuild.Identity)">
        <Project>%(ProjectToBuild.Identity)</Project>
        <Properties>
          Configuration=Debug;
          TargetFrameworkVersion=v4.5;

          OutputPath=bin\Debug\net45;
          IntermediateOutputPath=obj\Debug\net45\;
          DebugType=full;
          DefineConstants=DEBUG;TRACE;CODE_ANALYSIS;$(ExtraDefines)

          CodeAnalysisTreatWarningsAsErrors=true;
          RunCodeAnalysis=true;
        </Properties>
      </ProjectBuildConfiguration>
    </ItemGroup>
  </Target>
  
  <!-- BuildTest -->
  <PropertyGroup>
    <BuildTestDependsOn>
      RestorePackages;
      PatchAssemblyFiles;
      BuildTest_Configure
    </BuildTestDependsOn>
  </PropertyGroup>

  <Target Name="BuildTest" DependsOnTargets="$(BuildTestDependsOn)">
    <MSBuild Targets="Build"
             Projects="%(TestProjectBuildConfiguration.Project)"
             Properties="%(TestProjectBuildConfiguration.Properties)"
             BuildInParallel="true" />
  </Target>

  <Target Name="BuildTest_Configure" Outputs="%(TestProjectToBuild.Identity)">
    <ItemGroup>
      <TestProjectBuildConfiguration Include="Net45::%(TestProjectToBuild.Identity)">
        <Project>%(TestProjectToBuild.Identity)</Project>
        <TestAssembly>$(TestBinDir)\%(TestProjectToBuild.ProjectName)\System.%(TestProjectToBuild.Filename).dll</TestAssembly>
        <Properties>
          Configuration=Debug;
          TargetFrameworkVersion=v4.5;

          OutputPath=..\$(TestBinDir)\%(TestProjectToBuild.ProjectName);
          IntermediateOutputPath=obj\Debug\net45\;
          DebugType=full;
          DefineConstants=DEBUG;TRACE;$(ExtraDefines)

          RunCodeAnalysis=false;
        </Properties>
      </TestProjectBuildConfiguration>
    </ItemGroup>
  </Target>

  <!-- BuildNuGet -->
  <PropertyGroup>
    <BuildNuGetDependsOn>
      RestorePackages;
      PatchAssemblyFiles;
      BuildNuGet_Configure
    </BuildNuGetDependsOn>

    <BuildNuGet_ConfigureDependsOn>
      BclAsync_Projects;
    </BuildNuGet_ConfigureDependsOn>
  </PropertyGroup>
  
  <Target Name="BuildNuGet" DependsOnTargets="$(BuildNuGetDependsOn)">
    <MSBuild Targets="Build"
             Projects="%(NuGetProjectBuildConfiguration.Project)"
             Properties="%(NuGetProjectBuildConfiguration.Properties)"
             BuildInParallel="true" />
    
    <ItemGroup>
      <CoreFiles Include="$(NuGetDir)\**\lib\net*\*.Core.*" Exclude="$(NuGetDir)\Core\lib\net*\*.Core.*;$(NuGetDir)\Core.Net40Async\lib\net*\*.Core.*" />

      <Net40AsyncPackageFiles Include="$(NuGetDir)\**\lib\net40\Microsoft.Threading.Tasks.*"/>
      <Net40AsyncPackageFiles Include="$(NuGetDir)\**\lib\net40\System.IO.*"/>
      <Net40AsyncPackageFiles Include="$(NuGetDir)\**\lib\net40\System.Runtime.*"/>
      <Net40AsyncPackageFiles Include="$(NuGetDir)\**\lib\net40\System.Threading.Tasks.*"/>
      
      <InterfacesFiles Include="$(NuGetDir)\**\lib\net*\*.Interfaces.*" Exclude="$(NuGetDir)\Interfaces\lib\net*\*.Interfaces.*" />
    </ItemGroup>

    <Delete Files="@(CoreFiles)" />
    <Delete Files="@(Net40AsyncPackageFiles)" />
    <Delete Files="@(InterfacesFiles)" />
  </Target>

  <Target Name="BuildNuGet_Configure" Outputs="%(ProjectToBuild.Identity)" DependsOnTargets="$(BuildNuGet_ConfigureDependsOn)">
    <ItemGroup>
      <NuGetProjectBuildConfiguration Include="Net40::%(ProjectToBuild.Identity)">
        <Project>%(ProjectToBuild.Identity)</Project>
        <Properties>
          Configuration=Release;
          TargetFrameworkVersion=v4.0;


          OutputPath=..\$(NuGetDir)\%(ProjectToBuild.ProjectName)\lib\net40;
          IntermediateOutputPath=obj\Release\net40\;
          DebugType=none;
          DefineConstants=TRACE;NET40;$(ExtraDefines)

          RunCodeAnalysis=false;
        </Properties>
      </NuGetProjectBuildConfiguration>

      <NuGetProjectBuildConfiguration Include="Net40_WithAsync::%(ProjectToBuild.Identity)" Condition="'%(ProjectToBuild.ProjectName)' != 'Interfaces'">
        <Project>%(ProjectToBuild.Async40Project)</Project>
        <Properties>
          Configuration=Release;
          TargetFrameworkVersion=v4.0;
          AppConfig=..\$(ToolsDir)\BclAsync.app.config;

          OutputPath=..\$(NuGetDir)\%(ProjectToBuild.ProjectName).Net40Async\lib\net40;
          IntermediateOutputPath=obj\Release\net40Async\;
          DebugType=none;
          DefineConstants=TRACE;NET40;INCLUDE_ASYNC;$(ExtraDefines)

          RunCodeAnalysis=false;
        </Properties>
      </NuGetProjectBuildConfiguration>

      <NuGetProjectBuildConfiguration Include="Net45::%(ProjectToBuild.Identity)">
        <Project>%(ProjectToBuild.Identity)</Project>
        <Properties>
          Configuration=Release;
          TargetFrameworkVersion=v4.5;

          OutputPath=..\$(NuGetDir)\%(ProjectToBuild.ProjectName)\lib\net45;
          IntermediateOutputPath=obj\Release\net45\;
          DebugType=none;
          DefineConstants=TRACE;$(ExtraDefines)

          RunCodeAnalysis=false;
        </Properties>
      </NuGetProjectBuildConfiguration>
    </ItemGroup>
  </Target>
  
  <!-- Test -->
  <PropertyGroup>
    <TestDependsOn Condition=" '$(TestBuilt)' != 'true' ">
      BuildTest;
      $(TestDependsOn);
    </TestDependsOn>
  </PropertyGroup>

  <Target Name="Test" DependsOnTargets="RestorePackages;$(TestDependsOn)" Outputs="%(TestProjectBuildConfiguration.Identity)">
    <Exec Command="$(xUnitConsoleExecutable) @(TestProjectBuildConfiguration->Metadata('TestAssembly'), ' ') -xml $(xUnitResultsXml)" />
  </Target>


  <!-- Package -->
  <PropertyGroup>
    <PackageDependsOn Condition=" '$(NuGetBuilt)' != 'true' ">
      BuildNuGet;
      $(PackageDependsOn);
    </PackageDependsOn>
  </PropertyGroup>
  
  <Target Name="Package" DependsOnTargets="$(PackageDependsOn)" Outputs="%(NuSpecFile.Identity)">
    <GetAssemblyInfo AssemblyPath="%(NuSpecFile.AssemblyPath)">
      <Output TaskParameter="NuGetPropertyString" PropertyName="PropertiesString" />
    </GetAssemblyInfo>

    <Exec Command="$(NuGetExecutable) pack &quot;%(NuSpecFile.Identity)&quot; -Properties &quot;$(PropertiesString);interfaces_version=$(InterfacesVersion)&quot; -OutputDirectory &quot;$(NuGetDir)&quot;"/>
  </Target>



  <!-- Read Assembly Info -->
  <UsingTask TaskName="GetAssemblyInfo" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <AssemblyPath ParameterType="System.String" Required="true" />
      <NuGetPropertyString ParameterType="System.String" Output="true" />
    </ParameterGroup>

    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.Collections.Generic" />
      <Using Namespace="System.Diagnostics" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Linq" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          try 
          {
            var fileInfo = FileVersionInfo.GetVersionInfo(
              Path.GetFullPath(AssemblyPath));

            var properties = new Dictionary<string, string>() { 
              { "id", fileInfo.ProductName },
              { "version", fileInfo.ProductVersion },
              { "title", fileInfo.FileDescription },
              { "author", fileInfo.CompanyName },
              { "description", fileInfo.Comments },
            };

            NuGetPropertyString = string.Join(
              ";", 
              properties.Select(kvp => 
                string.Format("{0}={1}", kvp.Key, kvp.Value)));
                
            return true;
                
          } catch (Exception ex) {
            Log.LogErrorFromException(ex);
            return false;
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>