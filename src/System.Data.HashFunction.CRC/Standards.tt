<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ output extension=".cs" #>
<#
    var standards = ReadDefinedStandards(Host.ResolvePath("Standards.json"));
#>
//! Automatically generated from CRCStandards.tt
//! Direct modifications to this file will be lost.
//!
//! A vast majority if not all of the parameters for these standards 
//!   were provided by http://reveng.sourceforge.net/crc-catalogue/.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace System.Data.HashFunction
{
    public partial class CRC
    {
        /// <summary>
        /// Enumeration of all defined and implemented CRC standards.
        /// </summary>
        public enum Standard
        {
<# foreach (var standard in standards) { #>

            /// <summary>
            /// CRC standard named "<#= standard.Name #>".
            /// </summary>
            <#= standard.Name #>,
<# } #>

        }

        /// <summary>
        /// Dictionary of Settings for each of the defined and implemented CRC standards.
        /// </summary>
        public static readonly IReadOnlyDictionary<Standard, Setting> Standards = 
            new Dictionary<Standard, Setting>() {
<# foreach (var standard in standards) { 
        var settingsLine = string.Format(
            "{{ Standard.{0, -18} new Setting({1, 2}, {2, 18}, {3, 18}, {4, 5}, {5, 5}, {6, 18} ) }},",
            standard.Name + ",",
            standard.Bits,
            standard.Polynomial,
            standard.InitialValue,
            standard.ReflectIn.ToString().ToLower(),
            standard.ReflectOut.ToString().ToLower(),
            standard.XOrOut
            );
#>
                <#= settingsLine #>
<# }#>
            };
    }

    namespace CRCStandards
    {
        /// <summary>
        /// Namespace containing all implemented CRC standards.
        /// </summary>
        internal static class NamespaceDoc
        {
            
        }

<# foreach (var standard in standards) { #>
        /// <summary>
        /// Automatically generated implementation of <#= standard.Name #> CRC standard, based on the <see cref="CRC" /> class.
        /// </summary>
        public class <#= standard.Name #>
            : CRC
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="<#= standard.Name #>"/> class.
            /// </summary>
            public <#= standard.Name #>()
                : base(CRC.Standards[CRC.Standard.<#= standard.Name #>])
            {
            
            }
        }

<# } #>
    }
}

<#@ include file="Standards.t4" #>